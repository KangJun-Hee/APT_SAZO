buildscript {
    ext {
        queryDslVersion = "5.0.0"
    }
}

plugins {
    id 'org.springframework.boot' version '2.7.14'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    //querydsl 추가
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
    id 'java'
}

group = 'com.ap4j'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '11'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
//    implementation 'org.springframework:spring-messaging:5.3.10.RELEASE'
    implementation 'org.webjars:sockjs-client:1.0.2'
    implementation 'org.webjars:stomp-websocket:2.3.3'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation group: 'org.json', name: 'json', version: '20230618'
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework:spring-context-support'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'  // 수정된 부분
    implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect'
    implementation 'com.google.code.gson:gson:2.9.0'    // gson 사용을 위해 추가
    implementation 'org.springframework.boot:spring-boot-starter-validation'    // 유효성 검사를 위해 추가(스프링부트 2.3 이상부터 의존성 추가해야 사용 가능)
    implementation 'org.springframework.boot:spring-boot-starter-security'      // 암호화 위해 추가
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.h2database:h2'

    implementation 'org.springframework.boot:spring-boot-starter-data-rest'
    implementation 'org.springframework.retry:spring-retry'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    // https://mvnrepository.com/artifact/mysql/mysql-connector-java
    implementation group: 'mysql', name: 'mysql-connector-java', version: '8.0.28'

    // 스프링 부트 테스트 의존성
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.12.3' // 최신 버전 사용 가능


    // Batch WebClient 의존성 추가
    implementation 'org.springframework.boot:spring-boot-starter-webflux'

    // https://mvnrepository.com/artifact/io.netty/netty-resolver-dns-native-macos
    implementation("io.netty:netty-resolver-dns-native-macos:4.1.79.Final:osx-aarch_64")

    // 라이브 서버용.
    implementation 'org.springframework.boot:spring-boot-devtools'

    //querydsl 추가
    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"

    annotationProcessor(
            'org.projectlombok:lombok',
            "com.querydsl:querydsl-apt:${queryDslVersion}"
    )

    testAnnotationProcessor('org.projectlombok:lombok')

}

// querydsl 세팅 시작
def querydslDir = "$buildDir/generated/querydsl"
querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
}
sourceSets {
    main.java.srcDir querydslDir
}
configurations {
    querydsl.extendsFrom compileClasspath
}
compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}
// querydsl 세팅 끝

tasks.named('test') {
    useJUnitPlatform()
}
